## commented lines will not be executed.
## This file has some valid commands for examples.


## load the md380 driver
# select md380

## read radio memory image/codeplug in from the radio
# sync in

## save the current radio image to a file
# save md380v.img

## read the md380 radio image from a file (Note: load and save use a full filename)
# load md380v.img

## modify/replace the loaded radio images contacts, rxgroups, and memories from csv
## Note: There are multiple files here! They are named like "nedecn_%s.csv"%(type) where type is
##  one of memories, contacts, or rxgroups
##  this is not guaranteed to remain this way.
# from_csv nedecn


## This has an ugly syntax for now. Make sure you set this though!
##  it must be run every time you are dealing with an "unclean" radio image, 
##  that is, one you haven't modified before. 
# eval self.model._memobj.general.dmrid.set_value( your_dmr_id_as_an_int )

## save the modified radio image
# save md380v_nedecn.img

## write out csv files for editing of the current image
# to_csv myfile

## edit the csv components with the text editor in environment variable "EDITOR"
##  when done editing, save and quit, you will be returned to the shell.
# edit myfile

## how many DMR repeaters are registered with DMR-MARC in massachusetts?
# count repeaters state "Massachusetts"
## Let's see 'em
# show repeaters state "Massachusetts"

## What networks are there? What ones are most common? 
## 	the fields after "with" are the fields to count. 
##	the argument to them doesn't matter, so just use "none" or "count" or something. 
# fieldcount repeaters with ipsc_network None

## What about just the United States?  Note the quotes around United States to keep it as a single token.
# fieldcount repeaters country "United States"

## What about just in massachusetts?
# fieldcount repeaters state Massachusetts with ipsc_network None

## What color codes are most popular in Massachusetts? What cities/towns have the most repeaters?
##  Fields are counted separately. There will be output for cities, and then output for color_codes.
# fieldcount repeaters state Massachusetts country "United States" with color_code none city none

## Ugly syntax for now, but let's assume we have an rxgroup NEDECN_1 for timeslot 1 of the 
##   NEDECN network, with a bunch of our favorite talkgroups we want to listen to.
##   We also have NEDECN_2, same but for timeslot 2.
##   In both cases, the first contact in the rxgroup is going to be used as the txgroup.
## The RXGroup names must be resolvable in the currently loaded radio image!
##
## Let's add all the NE-TRBO repeaters, using those rxgroups, all at once!
##  It's magic.
#  self.model.add_memories( self.dmrdump.rxgroups_and_repeaters_to_memories( self.model, ("NEDECN_1","NE    DECN_2"), self.dmrdump.find(ipsc_network="NE-TRBO")))

## Write the current radio image to the radio
##  Currently banks are just based on channel numerical order, 
##	so bank 1 has channels 1-16, bank 2 is 17-etc. 
## Banks and memories are also automatically named, so
## SAVE YOUR IMAGE FIRST if you want to keep your current settings before writing back to your radio!
# sync out

